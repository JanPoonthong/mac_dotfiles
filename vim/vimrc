set scrolloff=10
set nowrap 
set hlsearch
set incsearch
set colorcolumn=80

set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Bundle 'sheerun/vim-polyglot'

call vundle#end()
filetype plugin indent on

packloadall

autocmd FileType python map <buffer> <F1> :w<CR>:exec '!python3' shellescape(@%, 1)<CR>
autocmd filetype c nnoremap <F1> :w <bar> exec '!gcc '.shellescape('%').' -o '.shellescape('%:r').' && ./'.shellescape('%:r')<CR>
autocmd filetype cpp nnoremap <F1> :w <bar> exec '!g++ '.shellescape('%').' -o '.shellescape('%:r').' && ./'.shellescape('%:r')<CR>

set wildignore+=node_modules/**,.git/**,dist/**,build/**
command -nargs=+ Grep :vimgrep "<args>" **/* | copen

nmap <silent> <unique> <Leader>l :nohlsearch<CR>

set wildmenu
set relativenumber
set laststatus=2

set shiftwidth=4 et
set tabstop=8
set expandtab
set softtabstop=-1

set list
set listchars=
set listchars+=precedes:<,extends:>
set listchars+=tab:â–¸\ 

set showcmd
let g:loaded_matchparen=1

let current_directory = substitute(getcwd(), $HOME, '~', '') . '/'

set rtp+=~/.fzf/
let $FZF_DEFAULT_COMMAND = 'fd --type f --exclude venv --exclude node_modules --exclude ENV'
nmap <silent> <unique> <Leader>b :call fzf#run({'sink': 'tabedit', 'down': '40%', 'options' : '--prompt ' . shellescape(current_directory)})<CR>
nmap <silent> <unique> <C-P> :call fzf#run({'sink': 'edit', 'down': '40%', 'options': '--prompt ' . shellescape(current_directory)})<CR>

let g:fzf_layout = { 'down': '30%' }
autocmd! FileType fzf
autocmd  FileType fzf set laststatus=0 noshowmode noruler
  \| autocmd BufLeave <buffer> set laststatus=2 showmode ruler

set numberwidth=3
set backspace=indent,eol,start

filetype indent on
filetype plugin on
syntax enable
set background=light
colorscheme solarized

noremap <unique> <tab> %

function! TogglePaste()
    if(&paste == 0)
        set paste
        echo "Paste Mode Enabled"
    else
        set nopaste
        echo "Paste Mode Disabled"
    endif
endfunction

function! ToggleSpell()
    if(&spell == 0)
        set spell
        echo "Spell Mode Enabled"
    else
        set nospell
        echo "Spell Mode Disabled"
    endif
endfunction

map <F2> :call TogglePaste()<cr>
map <F3> :call TogglePaste()<cr>

let s:i = 1
while s:i <= 10
  execute printf(
    \ 'nnoremap <unique> <Leader>%d :%dtabnext<CR>',
    \ s:i == 10 ? 0 : s:i,
    \ s:i,
  \ )
  let s:i += 1
endwhile

let g:python_highlight_all = 1

let g:ale_set_signs = 0
let g:ale_lint_delay = 0
let g:ale_set_highlights = 1
let g:ale_lint_on_text_changed = 'always'
let g:ale_virtualtext_cursor = 'disabled'
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'

highlight ALEError ctermbg=none ctermfg=red cterm=underline
highlight ALEWarning ctermbg=none ctermfg=red cterm=underline

highlight SpellBad ctermbg=none ctermfg=red cterm=underline

" highlight link ALEVirtualTextError Error
" highlight ALEVirtualTextWarning ctermbg=none ctermfg=brown cterm=none

set directory=~/.vim/swap/
set statusline=\ \ \ %<%f\ %m "Filename [-]
set statusline+=%=%(%l,%c%V%) "Line, col

set title
set titlestring=%t

let &t_SI.="\e[6 q" "SI = INSERT mode
let &t_SR.="\e[4 q" "SR = REPLACE mode
let &t_EI.="\e[2 q" "EI = NORMAL mode

set esckeys
set notimeout ttimeout ttimeoutlen=0

set exrc secure
